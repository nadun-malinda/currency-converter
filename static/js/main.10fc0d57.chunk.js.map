{"version":3,"sources":["components/CountrySearch/CountrySearch.module.scss","components/UI/Error/Error.module.scss","components/Converter/Converter.module.scss","hoc/layout/Left/Left.js","hoc/layout/Right/Right.js","hoc/layout/Main/Main.js","axios/axios-countries.js","axios/axios-currency.js","hooks/http.js","hooks/debounce.js","components/CountrySearch/Search/Search.js","components/CountrySearch/Details/Details.js","components/CountrySearch/CountrySearch.js","components/Converter/Display/Display.js","constants.js","components/Converter/ConvertForm/ConvertForm.js","components/UI/Error/Error.js","components/Converter/Converter.js","utils/utils.js","App.js","reportWebVitals.js","index.js","components/Converter/ConvertForm/ConvertForm.module.scss","hoc/layout/Main/Main.module.scss","components/CountrySearch/Search/Search.module.scss","components/CountrySearch/Details/Details.module.scss","components/Converter/Display/Display.module.scss"],"names":["module","exports","Left","children","span","md","Right","Main","left","right","className","classes","Row","instance","axios","create","baseURL","process","params","access_key","actionTypes","initalState","loading","error","data","httpReducer","httpState","action","type","errorMsg","useHttp","useReducer","dispatchHttp","getCountries","useCallback","url","Promise","resolve","reject","axiosCountries","get","then","res","catch","err","getCurrencyExchange","axiosCurrency","useDebounce","value","delay","useState","debouncedvalue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","Search","onSelectCountry","onSearchError","searchText","setSearchText","options","setOptions","inputRef","useRef","debounceSearchText","query","countries","map","country","name","SearchOutlined","SearchIcon","ref","size","allowClear","style","width","onSelect","_","onChange","placeholder","Details","countryData","Object","keys","length","List","capital","population","currencies","currency","join","renderDetails","description","defaultProps","CountrySearch","onSetCurrencies","setCountryData","searchError","setSearchError","handleSelectCountry","handleSearchError","getRateString","rate","Currency","Display","React","memo","LoadingOutlined","fontSize","spin","FROM_CURRENCY","Option","Select","ConvertForm","props","formRef","amount","setAmount","setCurrency","onConvert","initialValues","fromCurrency","Form","onFinish","Item","min","step","event","target","Number","disabled","showArrow","MiddleIcon","ArrowRightOutlined","Icon","code","htmlType","block","Error","message","showIcon","closable","Converter","setRate","current","setFieldsValue","toCurrency","resetForm","symbols","rates","exchangeRate","Math","round","isNaN","getExchangeRate","App","setCurrencies","handleOnSetCurrencies","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10fc0d57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CountrySearch\":\"CountrySearch_CountrySearch__1JgHu\",\"fade-in-right\":\"CountrySearch_fade-in-right__2sxBn\",\"fade-in-left\":\"CountrySearch_fade-in-left__3egVr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Error\":\"Error_Error__3-Mo_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Converter\":\"Converter_Converter__kXvoh\",\"fade-in-left\":\"Converter_fade-in-left__UDJOL\",\"fade-in-right\":\"Converter_fade-in-right__2FCe3\"};","import PropTypes from 'prop-types'\nimport { Col } from 'antd'\n\nconst Left = ({ children }) => {\n    return (\n        <Col span={24} md={{ span: 11 }}>\n            {children}\n        </Col>\n    )\n}\n\nLeft.propTypes = {\n    children: PropTypes.element.isRequired\n}\n\nexport default Left","import PropTypes from 'prop-types'\nimport { Col } from 'antd'\n\nconst Right = ({ children }) => {\n    return (\n        <Col span={24} md={{ span: 11 }}>\n            {children}\n        </Col>\n    )\n}\n\nRight.propTypes = {\n    children: PropTypes.element.isRequired\n}\n\nexport default Right","import { Row, Col } from 'antd'\nimport classes from './Main.module.scss'\nimport Left from '../Left/Left'\nimport Right from '../Right/Right'\n\nconst Main = ({ left, right }) => {\n    return (\n        <div className={classes.Main}>\n            <Row className={classes.Row}>\n                <Left>\n                    {left}\n                </Left>\n                <Col span={0} md={{ span: 2 }} />\n                <Right>\n                    {right}\n                </Right>\n            </Row>\n        </div>\n    )\n}\n\nexport default Main","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: process.env.REACT_APP_COUNTRIES_API_BASE_URL\n})\n\nexport default instance","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: process.env.REACT_APP_FIXER_API_BASE_URL,\n    params: {\n        access_key: process.env.REACT_APP_FIXER_ACCESS_KEY\n    }\n})\n\nexport default instance","import { useCallback, useReducer } from 'react'\nimport axiosCountries from '../axios/axios-countries'\nimport axiosCurrency from '../axios/axios-currency'\n\nconst actionTypes = {\n    SEND: 'SEND',\n    RESPONSE: 'RESPONSE',\n    ERROR: 'ERROR'\n}\n\nconst initalState = {\n    loading: false,\n    error: null,\n    data: null\n}\n\nconst httpReducer = (httpState, action) => {\n    switch (action.type) {\n        case actionTypes.SEND:\n            return { loading: true, error: null, data: null }\n        case actionTypes.RESPONSE:\n            return { ...httpState, loading: false, data: action.data }\n        case actionTypes.ERROR:\n            return { ...httpState, loading: false, error: action.errorMsg }\n        default:\n            return httpState\n    }\n}\n\nconst useHttp = () => {\n    const [httpState, dispatchHttp] = useReducer(httpReducer, initalState)\n\n    const getCountries = useCallback((url, params = {}) => {\n        dispatchHttp({ type: actionTypes.SEND })\n\n        return new Promise((resolve, reject) => {\n            axiosCountries.get(url, { params })\n                .then(res => {\n                    dispatchHttp({ type: actionTypes.RESPONSE, data: res.data })\n                    resolve(res.data)\n                })\n                .catch(err => {\n                    // https://restcountries.eu/rest/v2/ returns 404 for every errors\n                    dispatchHttp({ type: actionTypes.ERROR, errorMsg: 'No data found!' })\n                    reject(null)\n                })\n        })\n    }, [])\n\n    const getCurrencyExchange = useCallback((url, params = {}) => {\n        dispatchHttp({ type: actionTypes.SEND })\n        return new Promise((resolve, reject) => {\n            axiosCurrency.get(url, { params })\n                .then(res => {\n                    dispatchHttp({ type: actionTypes.RESPONSE, data: res.data })\n                    resolve(res.data)\n                })\n                .catch(err => {\n                    dispatchHttp({ type: actionTypes.ERROR, errorMsg: 'Something went wrong!' })\n                    reject(null)\n                })\n        })\n    }, [])\n\n    return {\n        loading: httpState.loading,\n        error: httpState.error,\n        data: httpState.data,\n        getCurrencyExchange,\n        getCountries\n    }\n}\n\nexport default useHttp","import { useState, useEffect } from 'react'\n\nconst useDebounce = (value, delay) => {\n    const [debouncedvalue, setDebouncedValue] = useState(value)\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value)\n        }, delay)\n\n        // clean up and cancel the timeout when value or delay change\n        return () => clearTimeout(handler)\n    }, [value, delay])\n\n    // this will return the latest value, \n    // if \"value\" hasn't been updated within last \"delay\" time\n    return debouncedvalue\n}\n\nexport default useDebounce","import { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { AutoComplete } from 'antd'\nimport { SearchOutlined } from '@ant-design/icons'\nimport useHttp from '../../../hooks/http'\nimport useDebounce from '../../../hooks/debounce'\nimport classes from './Search.module.scss'\n\nconst Search = ({ onSelectCountry, onSearchError }) => {\n    const [searchText, setSearchText] = useState('')\n    const [options, setOptions] = useState([])\n    const inputRef = useRef()\n\n    // custom hooks\n    const { error, getCountries } = useHttp()\n    const debounceSearchText = useDebounce(searchText, 500)\n\n    useEffect(() => {\n        if (error) {\n            setOptions([])\n            onSearchError(error)\n        }\n    }, [error, onSearchError])\n\n    useEffect(() => {\n        if (debounceSearchText === '') {\n            setOptions([])\n            return\n        }\n\n        if (debounceSearchText) {\n            const query = `${debounceSearchText}?fields=name;capital;currencies;population`\n            getCountries(`/name/${query}`)\n                .then(countries => {\n                    setOptions(countries.map(country => {\n                        return {\n                            value: country.name,\n                            data: country\n                        }\n                    }))\n                })\n        }\n    }, [debounceSearchText, getCountries])\n\n    const handleOnSelect = (_, { data }) => {\n        onSelectCountry(data)\n    }\n\n    const handleOnChange = (value) => {\n        setSearchText(value ? value : '')\n    }\n\n    return (\n        <div className={classes.Search}>\n            <SearchOutlined className={classes.SearchIcon} />\n            <AutoComplete\n                ref={inputRef}\n                size=\"large\"\n                value={searchText}\n                options={options}\n                allowClear={true}\n                style={{ width: '100%' }}\n                onSelect={handleOnSelect}\n                onChange={handleOnChange}\n                placeholder=\"Search for a country\" />\n        </div>\n    )\n}\n\nSearch.propTypes = {\n    onSelectCountry: PropTypes.func.isRequired,\n    onSearchError: PropTypes.func.isRequired\n}\n\nexport default Search","import PropTypes from 'prop-types'\nimport { Empty, Statistic } from 'antd'\nimport classes from './Details.module.scss'\n\nconst Details = ({ countryData, error }) => {\n    const renderDetails = () => {\n        return (\n            <ul className={classes.List}>\n                <li>\n                    <label>Name:</label>\n                    <p>{countryData.name}</p>\n                </li>\n                <li>\n                    <label>Capital:</label>\n                    <p>{countryData.capital}</p>\n                </li>\n                <li>\n                    <label>Population:</label>\n                    <Statistic value={countryData.population} />\n                </li>\n                <li>\n                    <label>{countryData.currencies.length > 1 ? 'Currencies' : 'Currency'}:</label>\n                    <p>{countryData.currencies?.map(currency => currency.name).join(', ')}</p>\n                </li>\n            </ul>\n        )\n    }\n\n    const getEmptyDescription = () => {\n        return error ? error : \"Search and select a country to see details and convert currencies\"\n    }\n\n    return (\n        <div className={classes.Details}>\n            {\n                Object.keys(countryData).length > 0 ?\n                    renderDetails() :\n                    <Empty description={getEmptyDescription()} />\n            }\n        </div>\n    )\n}\n\nDetails.propTypes = {\n    countryData: PropTypes.object,\n    error: PropTypes.string\n}\nDetails.defaultProps = {\n    countryData: {},\n    error: null\n}\n\nexport default Details","import { useState, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport Search from './Search/Search'\nimport Details from './Details/Details'\nimport classes from './CountrySearch.module.scss'\n\nconst CountrySearch = ({ onSetCurrencies }) => {\n    const [countryData, setCountryData] = useState({})\n    const [searchError, setSearchError] = useState(null)\n\n    const handleSelectCountry = useCallback((countryData) => {\n        setCountryData(countryData)\n        onSetCurrencies(countryData.currencies)\n    }, [onSetCurrencies])\n\n    const handleSearchError = useCallback(error => {\n        setSearchError(error)\n    }, [])\n\n    return (\n        <div className={classes.CountrySearch}>\n            <Search onSelectCountry={handleSelectCountry} onSearchError={handleSearchError} />\n            <Details countryData={countryData} error={searchError} />\n        </div>\n    )\n}\n\nCountrySearch.propTypes = {\n    onSetCurrencies: PropTypes.func.isRequired\n}\n\nexport default CountrySearch","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Statistic } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\nimport classes from './Display.module.scss'\n\nconst getRateString = (rate, currency) => {\n    return (\n        <>\n            <Statistic value={rate} />\n            <span className={classes.Currency}>{currency}</span>\n        </>\n    )\n}\n\nconst Display = React.memo(({ loading, rate, currency }) => {\n    return (\n        <div className={classes.Display}>\n            <h3>Exchange Rate</h3>\n            <h1>\n                {loading ? <LoadingOutlined style={{ fontSize: 24 }} spin /> : getRateString(rate, currency)}\n            </h1>\n        </div>\n    )\n})\n\nDisplay.propTypes = {\n    rate: PropTypes.number.isRequired,\n    currency: PropTypes.string\n}\nDisplay.defaultProps = {\n    currency: null\n}\n\nexport default Display","export const FROM_CURRENCY = 'SEK'","import PropTypes from 'prop-types'\nimport { Form, Input, Select, Button, Row, Col } from 'antd'\nimport { ArrowRightOutlined } from '@ant-design/icons'\nimport classes from './ConvertForm.module.scss'\n\n// constants\nimport { FROM_CURRENCY } from '../../../constants'\nconst { Option } = Select\n\nconst ConvertForm = (props) => {\n    const {\n        formRef,\n        amount,\n        currency,\n        currencies,\n        setAmount,\n        setCurrency,\n        onConvert,\n        loading\n    } = props\n\n    const handleOnChange = (value) => {\n        // amout should be type of number\n        setAmount(Number(value))\n    }\n\n    return (\n        <Form\n            ref={formRef}\n            initialValues={{ fromCurrency: FROM_CURRENCY }}\n            className={classes.Form}\n            onFinish={onConvert}>\n            <Row>\n                <Col span={24}>\n                    <label>Amount</label>\n                    <Form.Item name=\"amount\">\n                        <Input\n                            type=\"number\"\n                            value={amount}\n                            min={0}\n                            step=\"any\"\n                            allowClear={true}\n                            onChange={(event) => handleOnChange(event.target.value)}\n                            disabled={!currency} />\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={9}>\n                    <label>From</label>\n                    <Form.Item name=\"fromCurrency\">\n                        <Select\n                            disabled\n                            showArrow={false}\n                            className={classes.Select}>\n                            <Option value={FROM_CURRENCY}>{FROM_CURRENCY}</Option>\n                        </Select>\n                    </Form.Item>\n                </Col>\n                <Col\n                    span={6}\n                    className={classes.MiddleIcon}>\n                    <ArrowRightOutlined className={classes.Icon} />\n                </Col>\n                <Col span={9}>\n                    <label>To</label>\n                    <Form.Item name=\"toCurrency\">\n                        <Select\n                            value={currency}\n                            options={currencies.map(currency => ({ value: currency.code }))}\n                            onChange={(value) => setCurrency(value)}\n                            disabled={!currency}\n                            className={classes.Select} />\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={24}>\n                    <Form.Item name=\"convert\">\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            block\n                            disabled={!(amount > 0) || currency === null}\n                            loading={loading}>CONVERT</Button>\n                    </Form.Item>\n                </Col>\n            </Row>\n        </Form>\n    )\n}\n\nConvertForm.propTypes = {\n    formRef: PropTypes.object.isRequired,\n    amount: PropTypes.number.isRequired,\n    currency: PropTypes.string,\n    currencies: PropTypes.array,\n    setAmount: PropTypes.func.isRequired,\n    setCurrency: PropTypes.func.isRequired,\n    onConvert: PropTypes.func.isRequired,\n    loading: PropTypes.bool\n}\nConvertForm.defaultProps = {\n    currency: null,\n    currencies: [],\n    loading: false\n}\n\nexport default ConvertForm","import PropTypes from 'prop-types'\nimport { Alert } from 'antd'\nimport classes from './Error.module.scss'\n\nconst Error = ({ message }) => {\n    return (\n        <Alert\n            className={classes.Error}\n            message={message}\n            type=\"error\"\n            showIcon\n            closable />\n    )\n}\n\nError.propTypes = {\n    message: PropTypes.string.isRequired\n}\n\nexport default Error","import { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { getExchangeRate } from '../../utils/utils'\nimport Display from './Display/Display'\nimport ConvertForm from './ConvertForm/ConvertForm'\nimport Error from '../UI/Error/Error'\nimport useHttp from '../../hooks/http'\nimport classes from './Converter.module.scss'\n\n// constants\nimport { FROM_CURRENCY } from '../../constants'\n\nconst Converter = ({ currencies }) => {\n    const [amount, setAmount] = useState(0)\n    const [currency, setCurrency] = useState(null)\n    const [rate, setRate] = useState(0)\n    const formRef = useRef(null)\n\n    // custom hook\n    const { loading, error, getCurrencyExchange } = useHttp()\n\n    useEffect(() => {\n        if (currencies.length > 0) {\n            formRef.current.setFieldsValue({ toCurrency: currencies[0].code })\n            setCurrency(currencies[0].code)\n        } else {\n            formRef.current.setFieldsValue({ toCurrency: null })\n            setCurrency(null)\n        }\n    }, [currencies])\n\n    // effect to run when change currency selection dropdown.\n    // need to reset form values.\n    useEffect(() => {\n        resetForm()\n    }, [currency])\n\n    const resetForm = () => {\n        formRef.current.setFieldsValue({ amount: 0 })\n        setAmount(0)\n        setRate(0)\n    }\n\n    // on submit the form\n    const onConvert = ({ toCurrency }) => {\n        const params = {\n            symbols: `${toCurrency},${FROM_CURRENCY}`\n        }\n        getCurrencyExchange('/latest', params)\n            .then(({ rates }) => {\n                const exchangeRate = getExchangeRate(amount, rates, currency, FROM_CURRENCY)\n                setRate(exchangeRate)\n            })\n    }\n\n    return (\n        <div className={classes.Converter}>\n            <Display loading={loading} rate={rate} currency={currency} />\n            <ConvertForm\n                formRef={formRef}\n                amount={amount}\n                currency={currency}\n                currencies={currencies}\n                setAmount={setAmount}\n                setCurrency={setCurrency}\n                onConvert={onConvert}\n                loading={loading} />\n\n            {error && <Error message={error} />}\n        </div>\n    )\n}\n\nConverter.propTypes = {\n    currencies: PropTypes.array\n}\nConverter.defaultProps = {\n    currencies: []\n}\n\nexport default Converter","// calculate exchange rate using 3 sets of currencies.\n// rates array includes exchange rates for toCurrency and fromCurrency,\n// based on the third constant currency type.\n// this method will returns the exchange rate for toCurrency by given amount of fromCurrency.\nexport const getExchangeRate = (amount, rates, toCurrency, fromCurrency) => {\n    let exchangeRate = ((amount * rates[toCurrency]) / rates[fromCurrency])\n    exchangeRate = Math.round(exchangeRate * 100) / 100\n    return isNaN(exchangeRate) ? 0 : exchangeRate\n}","import { useState, useCallback } from 'react'\nimport 'antd/dist/antd.css'\nimport Main from './hoc/layout/Main/Main'\nimport CountrySearch from './components/CountrySearch/CountrySearch'\nimport Converter from './components/Converter/Converter'\n\nfunction App() {\n  const [currencies, setCurrencies] = useState([])\n\n  const handleOnSetCurrencies = useCallback(currencies => {\n    setCurrencies(currencies)\n  }, [])\n\n  return (\n    <Main\n      left={\n        <CountrySearch onSetCurrencies={handleOnSetCurrencies} />\n      }\n      right={\n        <Converter currencies={currencies} />\n      }\n    />\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './sass/_global.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ConvertForm_Form__Vuas2\",\"MiddleIcon\":\"ConvertForm_MiddleIcon__1GdWI\",\"Icon\":\"ConvertForm_Icon__3cfuk\",\"Select\":\"ConvertForm_Select__1qdkb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__1jIw0\",\"Row\":\"Main_Row__fZufZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"Search_Search__ZFoGN\",\"SearchIcon\":\"Search_SearchIcon__2asig\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Details\":\"Details_Details__2D6bf\",\"List\":\"Details_List__2l88G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Display\":\"Display_Display__1lwOm\",\"Currency\":\"Display_Currency__RJR9H\"};"],"sourceRoot":""}